{"name": "Проверка создания курьера c существующим логином", "status": "failed", "statusDetails": {"message": "AssertionError: assert (409 == 409 and 'Этот логин у...буйте другой.' == 'Этот логин уже используется'\n +  where 409 = <Response [409]>.status_code\n  \n  - Этот логин уже используется\n  + Этот логин уже используется. Попробуйте другой.)", "trace": "self = <test_create_courier.TestCreateCourier object at 0x000002C6DE726DB0>\n\n    @allure.title(\"Проверка создания курьера c существующим логином\")\n    def test_create_courier_duplicate_login(self):\n    \n        payload_1 = generate_courier_data()\n    \n        courier2_data = generate_courier_data()\n    \n        payload_2 = {\n            \"login\": payload_1[\"login\"],\n            \"password\": courier2_data[\"password\"],\n            \"first_name\": courier2_data[\"first_name\"],\n        }\n        with allure.step(\n            \"Пробуем создать первого курьера с полным набором корректных данных\"\n        ):\n            requests.post(f\"{Url.service_url}{Url.create_courier_url}\", data=payload_1)\n        with allure.step(\n            \"Пробуем создать второго курьера с логином, равным логину первого курьера\"\n        ):\n            response = requests.post(\n                f\"{Url.service_url}{Url.create_courier_url}\", data=payload_2\n            )\n        response_json = response.json()\n        courier_id = courier_login(payload_1[\"login\"], payload_1[\"password\"]).json()[\n            \"id\"\n        ]\n        delete_courier(courier_id)\n>       assert (\n            response.status_code == 409\n            and response_json[\"message\"] == \"Этот логин уже используется\"\n        )\nE       AssertionError: assert (409 == 409 and 'Этот логин у...буйте другой.' == 'Этот логин уже используется'\nE        +  where 409 = <Response [409]>.status_code\nE         \nE         - Этот логин уже используется\nE         + Этот логин уже используется. Попробуйте другой.)\n\ntests\\test_create_courier.py:109: AssertionError"}, "steps": [{"name": "Пробуем создать первого курьера с полным набором корректных данных", "status": "passed", "start": 1712945216823, "stop": 1712945217343}, {"name": "Пробуем создать второго курьера с логином, равным логину первого курьера", "status": "passed", "start": 1712945217344, "stop": 1712945217840}, {"name": "Логинимся курьером", "status": "passed", "parameters": [{"name": "login", "value": "'hvinqtqsdy'"}, {"name": "password", "value": "'tcntowbweg'"}], "start": 1712945217840, "stop": 1712945218356}, {"name": "Удаляем курьера", "status": "passed", "parameters": [{"name": "id", "value": "291041"}], "start": 1712945218357, "stop": 1712945218863}], "start": 1712945216823, "stop": 1712945218869, "uuid": "9d30424d-a3a6-4312-9ef1-e98c2a81c7bd", "historyId": "05f0c878354b348fa068616c75569e18", "testCaseId": "05f0c878354b348fa068616c75569e18", "fullName": "tests.test_create_courier.TestCreateCourier#test_create_courier_duplicate_login", "labels": [{"name": "feature", "value": "Создание курьера"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_create_courier"}, {"name": "subSuite", "value": "TestCreateCourier"}, {"name": "host", "value": "DESKTOP-G34FJ0I"}, {"name": "thread", "value": "10420-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_create_courier"}]}